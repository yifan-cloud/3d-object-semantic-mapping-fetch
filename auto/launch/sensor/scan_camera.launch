<?xml version="1.0"?>

<launch>

    <arg name="camera" default="camera" />

    <!-- start sensor-->
    <include file="$(find openni2_launch)/launch/openni2.launch">
        <arg name="camera" default="$(arg camera)"/>
        <arg name="publish_tf" value="false"/>
    </include>

    <!-- run pointcloud_to_laserscan node -->
    <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">

        <remap from="cloud_in" to="$(arg camera)/depth/points"/>
        <remap from="scan" to="$(arg camera)/scan"/>
        <rosparam>
            target_frame: camera_link_custom # Leave disabled to output scan in pointcloud frame
            transform_tolerance: 0.01
            min_height: -0.1
            max_height: 1.1

            angle_min: -1.5708 # -M_PI/2
            angle_max: 1.5708 # M_PI/2
            angle_increment: 0.0087 # M_PI/360.0
            scan_time: 0.3333
            range_min: 0.40
            range_max: 6.0
            use_inf: true

            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 1
        </rosparam>

    </node>

    <!-- Publish TF here -->
    <node pkg="tf" type="static_transform_publisher" 
	name="camera_link_custom_tf_broadcaster" 
	args="0.1 0 0.35 0 0 0 1 base_link camera_link_custom 100" />

    <!-- start main application 
    <node pkg="turtle_controler" type="main.py" name="turtlebot_controller" >
    </node>-->

</launch>
